#!/usr/bin/bash

tcp_max_buf=16777216
udp_max_buf=16777216

save_files=( /etc/passwd /etc/shadow /etc/group /etc/user_attr \
          /etc/security/policy.conf /etc/security/auth_attr /etc/security/exec_attr \
          /etc/security/prof_attr /etc/pam.conf /var/smb/smbpasswd \
          /var/smb/smbgroup.db /etc/smbautohome /etc/vfstab )

save_dirs=( /root )

#save_svccfg=( nfs/server smb/server stmf )

save_svccfg=( smb/server )

#enable_services=( system/stmf iscsi/target \
#                  system/idmap smb/client smb/server \
#                  nfs/server )

enable_services=( system/idmap smb/client smb/server )

ukeystor="/opt/custom/share/persist-gz"
[[ ! -d $ukeystor ]] && mkdir -p $ukeystor

start() {
    if [[ -n $(/bin/bootparams | grep '^smartos=true') ]]; then
        [[ -n ${tcp_max_buf} ]] && ipadm set-prop -p max_buf=${tcp_max_buf} tcp
        [[ -n ${udp_max_buf} ]] && ipadm set-prop -p max_buf=${udp_max_buf} udp

        for file in ${save_files[*]}
        do
            ukf=${ukeystor}${file}
            if [[ -e ${ukf} ]] && ! cmp -s $ukf $file; then
                cp -p $ukf $file
                echo "stor->sys file: $file"
            fi
        done

        for dir in ${save_dirs[*]}
        do
            ukd=${ukeystor}${dir}/
            if [[ -d $ukd ]]; then
                rsync -ax $ukd $dir
                echo "stor->sys  dir: $dir"
            fi
        done

        for svcprop in ${save_svccfg[*]}
        do
            tmp=$(mktemp)
            ukp=${ukeystor}/svc/${svcprop//\//.}.prop
            svccfg export -a ${svcprop} > ${tmp}
            if [[ -e ${ukp} ]] && ! cmp -s ${tmp} ${ukp}; then
                svccfg import ${ukp}
                echo "stor->sys prop: $svcprop"
            fi
            rm ${tmp}
        done

        mount -F lofs -a &> /dev/null

        for service in ${enable_services[*]}
        do
            if [[ $(svcs -H $service) =~ ^disabled ]]; then
                svcadm enable $service
                echo "enable svc: $service"
            fi
        done
    fi
}

stop() {
    for file in ${save_files[*]}
    do
        ukf=${ukeystor}${file}
        if [[ $ukf -ot $file ]]; then
            rsync -Rax $file ${ukeystor}
            echo "sys->stor file: $file"
        fi
    done

    for dir in ${save_dirs[*]}
    do
        rsync -ax $dir ${ukeystor}
        echo "sys->stor  dir: $dir"
    done

    mkdir -p ${ukeystor}/svc/
    for svcprop in ${save_svccfg[*]}
    do
        tmp=$(mktemp)
        ukp=${ukeystor}/svc/${svcprop//\//.}.prop
        svccfg export -a ${svcprop} > ${tmp}
        if ! cmp -s ${tmp} ${ukp}; then
            cp ${tmp} ${ukp}
            echo "sys->stor prop: $svcprop"
        fi
        rm ${tmp}
    done
}

case "$1" in
    'start')
        start
    ;;
    'stop')
        stop
    ;;
esac
